"declaredCurrencyCode": {
  "type": "string",
  "pattern": "^[A-Z]{3}$",
  "example": "USD",
  "description": "Three-letter ISO 4217 currency code (e.g., USD, EUR, GBP)."
}



"amount": {
  "type": "string",
  "pattern": "^\\d+(\\.\\d{2})?$",
  "example": "1234.56",
  "description": "Currency amount in numeric format, always with two decimal places."
}


Deposit Submission Process
Validate Request:

The function checks if the RemoteDepositRequest is valid and extracts relevant details such as:
extUserId (external user ID)
frontImage and backImage (check images)
accountNumber
amountValue
deviceId
Perform Velocity Check (MOBVELO Stored Procedure)

Calls the Allogent velocity check API (MOBVELO) to determine if the user has exceeded their daily or monthly deposit limits.
If the check fails, the function returns an appropriate error.
Prepare Deposit Request

The function constructs an Deposit_Submit_Request object with:
DepositorId (external user ID)
MasterUserId (transaction ID)
DepositAccount (account details)
Cheque (check details and images)
Call Allogent Deposit_Submit API

The function makes a WCF service call to MobilePaymentWebServiceClient.Deposit_Submit with the structured deposit request.
Handle Response from Allogent

If the deposit is successful, the API returns a TransactionId (confirmation number).
If the deposit fails, the function returns an appropriate error based on the API response.

<add name="WCFLOGDB"  
       providerName="System.Data.OleDb"
       connectionString="Provider=SQLOLEDB;Data Source=wcflogdb-tst;Initial Catalog=WCF_LOGDB_STG;Integrated Security=SSPI"/>
  

 "INSERT INTO MOB_RDC_TRAN (USER_ID, ACCT, ACCT_TYP, AMT, DUID, Monitise, ArvGo)" &
                                                                                "VALUES (?, ?, ?, ?, ?, ?, ?); " &
                                                                                "SELECT @@IDENTITY",
                                                                                {userId, account, accountType.ToString, amount, duId, Monitise, arvGo})


CREATE TABLE WCF_LOGDB.dbo.MOB_RDC_TRAN (
	MOB_RDC_TRAN_I bigint IDENTITY(1,1) NOT NULL,
	LOG_D datetime NOT NULL,
	USER_ID varchar(8) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	ACCT bigint NOT NULL,
	ACCT_TYP char(3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	AMT money NOT NULL,
	ACCEPTED bit NULL,
	DUID varchar(100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	Monitise int NULL,
	ArvGo int NULL,
	CONSTRAINT PK_MOB_RDC_TRAN PRIMARY KEY (MOB_RDC_TRAN_I)
);


CREATE TABLE WCF_LOGDB.dbo.MOB_RDC_LOG (
	MOB_RDC_LOG_I bigint IDENTITY(1,1) NOT NULL,
	LOG_D datetime NOT NULL,
	HOST_N varchar(32) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	MOB_RDC_ACT_I tinyint NOT NULL,
	MOB_RDC_TRAN_I bigint NOT NULL,
	MOB_RDC_EVNT_I tinyint NOT NULL,
	MSG text COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	Monitise int NULL,
	ArvGo int NULL,
	CONSTRAINT PK_MOB_RDC_LOG PRIMARY KEY (MOB_RDC_LOG_I)
);
